"""Chapter 3, stochastic systems."""


import random
from collections.abc import Generator
from typing import NoReturn

import numpy as np
from numpy.typing import ArrayLike
from scipy import signal


class RandomProcess(random.Random):
    """Random process base class."""


def ARMA(p: ArrayLike, q: ArrayLike, N: int, x0: ArrayLike | None = None) -> ArrayLike:
    """Auto-regressive Moving-Average.

    An ARMA process of order (p, q) may be generated by filtering white noise with a linear
    shift-invariant system. That is, a white noise process convolved with a rational system function
    with p poles and q zeros.

    Note that the power spectrum of ARMA(p, q) process contains 2p poles and 2q zeros with spectral
    reciprocal symmetry. In controls applications, this has deep implications on system
    "identifiability".

    Args:
        p: 1 or more poles, if p == 0 and q > 0 the process is equivalent to MA(q)
        q: 1 or more poles, if q == 0 and p > 0 the process is equivalent to AR(p)
        N: Number of iterations of system state evolution
        x0: x1D vector of size (p + q + 1) to indicate an initial state
    """
    rng = np.random.default_rng()
    ensemble = np.sqrt(1 / 2) * (rng.random(N) - 0.5)
    sos = signal.zpk2sos(q, p, 1)
    sig = signal.sosfilt(sos, ensemble)
    return sig



def AR(p: int, N: int) -> NoReturn:
    """Auto-regressive."""
    raise NotImplementedError()


def MA(q: int, N: int) -> NoReturn:
    """Moving Average Random (stochastic) process."""
    raise NotImplementedError()


def Harmonic(A: int, process: None | Generator = None) -> NoReturn:
    """The harmonic random process."""
    raise NotImplementedError()


def White(variance: float) -> NoReturn:
    """The unit variance, zero-mean, random process.

    Page 93.

    """
    raise NotImplementedError()


def White_Gaussian() -> NoReturn:
    """Sequence of uncorrelated real-valued Gaussian random values.

    Page 94.

    """
    raise NotImplementedError()


def Bernoulli() -> NoReturn:
    """The Bernoulli process consists of a sequence of uncorrelated Bernoulli variables (-1, 1).

    Page 94.

    """
    raise NotImplementedError()
